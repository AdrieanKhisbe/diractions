#compdef _diraction-dispatch
# completion for the dispatcher command

#  words: 1:function 2:directory 3:pattern

local diract=$words[2]
local dirdir=`eval echo $diract`
local subcommand=$words[3]

PWD=$dirdir

if (( CURRENT == 3));
then # Subcomand completion
    case $subcommand in

	/*) # Pattern :D

	    local pattern="${subcommand#/}"
	    local cmd="$cd $dirdir && ls -d $pattern* 2>/dev/null  | sed -E 's:^:/:g' | xargs echo"
	    # maybe extract fund
	    # §todo: check no file are grabbed

	    for dir in $(eval $cmd)
	    do
		compadd $dir
	    done && return 0
	    ;;

	*)	# Basic argument
	    local -a subcommands
	    subcommands=(
		'ls:List files in the specified folder (alias l)'
		'exec:Exec (through eval) the specified command (alias e - , _ )'
		'interactive:Go in interactive mode, to perform several commands (alias i,prompt,shell)'
		'/:Go in some of the subfolder if provided (alias c cd)'
		'edit:Edit the given subfile (alias ed)'
		'browser:Launch browser on the directory (alias b)'
		'tree:Launch tree command (alias t)'
	    )
	    compadd $DIRACTION_DISPATCH_WHITELIST
	    # maybe extend subcommands with these value??
	    # or extend the array here?

	    _describe -t commands "Dispatcher subcommand" subcommands

	    return
    esac
else # argument completion
    # completion won't be called without a 2 arg, so sure will be 4+
    case $subcommand in
	# no args
	e|"exec") # maybe files?
	    return 0
	    ;;
	i|interactive|prompt|shell|help) return 0;;
	#§todo: search how to add message

	*)
	    local compfun="_${subcommand}"

	    # shifting words args
	    shift words; shift words
	    if functions "$compfun" > /dev/null; then
		# §tofix: git error: zsh:12: command not found: ___diraction-dispatch_main
		# if so do it up
		$compfun && return 0
		# beware to file completion:
		# https://github.com/robbyrussell/oh-my-zsh/issues/2394
	    else
		# decide what to do. "no completion, you are on your own"
	    fi
	    ;;
    esac

fi
